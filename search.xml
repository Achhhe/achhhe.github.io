<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ToyDL之扩散模型DDPM</title>
      <link href="/2024/08/24/240824-toy-diffusion/"/>
      <url>/2024/08/24/240824-toy-diffusion/</url>
      
        <content type="html"><![CDATA[<blockquote><p>背景：某生成任务用到了DDPM，为了更直观理解其前向和反向过程，写个简易的Toy工程</p><p><a href="https://github.com/Achhhe/ToyDL/tree/main/240824-toy-diffusion">Github地址</a></p></blockquote><h2 id="扩散模型简介"><a href="#扩散模型简介" class="headerlink" title="扩散模型简介"></a>扩散模型简介</h2><p>由两条参数化<strong>马尔可夫链</strong>组成。 前向过程（又称扩散过程）时逐渐向数据中添加噪声，直到数据完全退化为噪声。反向过程则逐步去噪，最终达到数据生成的目的</p><p>下两图是毕设中的，条件扩散模型</p><img src="/2024/08/24/240824-toy-diffusion/chp4-diffusion-model-intro2.png" class=""><img src="/2024/08/24/240824-toy-diffusion/chp4-ieddpm-framework-visio.png" class=""><h2 id="前向过程"><a href="#前向过程" class="headerlink" title="前向过程"></a>前向过程</h2><p>前向为加噪过程，核心公式如下</p><img src="/2024/08/24/240824-toy-diffusion/core-eq-diffusion.png" class=""><p>其中$\bar{\alpha}_t=\textstyle \prod_1^t\alpha_t$</p><p>$\alpha_{1:T}\triangleq(\alpha_1,\alpha2,\dots,\alpha_T)$是一组超参数，用以控制每次迭代的噪声方差，并且满足条件$0 &lt; \alpha_t &lt; 1$以确保$t \rightarrow \infty$时方差有界</p><p>对应核心代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">sqrt_alphas_cumprod <span class="token operator">=</span> torch<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>alphas_cumprod<span class="token punctuation">)</span>sqrt_one_minus_alphas_cumprod <span class="token operator">=</span> torch<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> alphas_cumprod <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token comment"># sample t and noise</span>t <span class="token operator">=</span> torch<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> n_steps<span class="token punctuation">,</span> <span class="token punctuation">(</span>b<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>z <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span><span class="token comment"># forward sample xt</span>xt <span class="token operator">=</span> sqrt_alphas_cumprod<span class="token punctuation">.</span>gather<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">.</span>view<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> x <span class="token operator">+</span> sqrt_one_minus_alphas_cumprod<span class="token punctuation">.</span>gather<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">.</span>view<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> z<span class="token comment"># denoise</span>z_pred <span class="token operator">=</span> denoiser<span class="token punctuation">(</span>xt<span class="token punctuation">,</span> t<span class="token punctuation">)</span>loss <span class="token operator">=</span> F<span class="token punctuation">.</span>mse_loss<span class="token punctuation">(</span>z<span class="token punctuation">,</span> z_pred<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="反向过程"><a href="#反向过程" class="headerlink" title="反向过程"></a>反向过程</h2><p>反向采样过程的核心公式如下</p><img src="/2024/08/24/240824-toy-diffusion/core-eq-final.png" class=""><p>对应核心代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">alphas_cumprod_prev <span class="token operator">=</span> torch<span class="token punctuation">.</span>cat<span class="token punctuation">(</span><span class="token punctuation">[</span>torch<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span><span class="token punctuation">,</span> alphas_cumprod<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>posterior_variance <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1.</span> <span class="token operator">-</span> alphas<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1.</span> <span class="token operator">-</span> alphas_cumprod_prev<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1.</span> <span class="token operator">-</span> alphas_cumprod<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">sample_ddpm</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">:</span>    t <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>    at <span class="token operator">=</span> alphas<span class="token punctuation">.</span>gather<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">.</span>view<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    st <span class="token operator">=</span> sqrt_one_minus_alphas_cumprod<span class="token punctuation">.</span>gather<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">.</span>view<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    mean <span class="token operator">=</span> torch<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">/</span> at<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>x <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">-</span> at<span class="token punctuation">)</span> <span class="token operator">*</span> model<span class="token punctuation">(</span>x<span class="token punctuation">,</span> t<span class="token punctuation">.</span>repeat<span class="token punctuation">(</span>n_samples<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> st<span class="token punctuation">)</span>    var <span class="token operator">=</span> posterior_variance<span class="token punctuation">.</span>gather<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">.</span>view<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    xt_pre <span class="token operator">=</span> mean <span class="token operator">+</span> torch<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>var<span class="token punctuation">)</span> <span class="token operator">*</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>n_samples<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> xt_pre<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：反向过程需要计算给定$\boldsymbol{x}_0$下的后验分布</p><img src="/2024/08/24/240824-toy-diffusion/core-eq-reverse.png" class=""><p>然而反向过程$\boldsymbol{x}_0$未知，DDPM采用的是网络去噪估计$\hat{\boldsymbol{x}}_0=\frac{1}{\sqrt{\bar{\alpha}_t}}(\boldsymbol{x}_t-\sqrt{1-\bar{\alpha}_t}\epsilon_\theta)$，带入上式即可得到反向核心公式</p></blockquote><h2 id="DDIM加速采样"><a href="#DDIM加速采样" class="headerlink" title="DDIM加速采样"></a>DDIM加速采样</h2><img src="/2024/08/24/240824-toy-diffusion/core-eq-final-ddim.png" class=""><p>对应核心公式</p><pre class="line-numbers language-none"><code class="language-none">def sample_ddim(x, t, eta = 1):    t = torch.tensor([t]).to(device)    at = alphas_cumprod.gather(-1, t).view(-1, 1)    at_1 = alphas_cumprod_prev.gather(-1, t).view(-1, 1)    sigma_t = eta * torch.sqrt((1 - at_1) / (1 - at) * (1 - at / at_1))    xt_pre = (        torch.sqrt(at_1 / at) * x         + (torch.sqrt(1 - at_1 - sigma_t ** 2) - torch.sqrt(            (at_1 * (1 - at)) / at)) * model(x, t.repeat(n_samples))        + sigma_t * torch.randn_like(x)    )    return xt_pre<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="实验对比"><a href="#实验对比" class="headerlink" title="实验对比"></a>实验对比</h2><p>以一维数据为例，扩散模型学习给定噪声分布，完成后分别基于DDPM和DDIM进行生成</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> torch<span class="token punctuation">.</span>cat<span class="token punctuation">(</span><span class="token punctuation">[</span>    torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">30000</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.01</span> <span class="token operator">+</span> <span class="token number">0.5</span><span class="token punctuation">,</span>    torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">40000</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.03</span> <span class="token operator">+</span> <span class="token number">0.1</span><span class="token punctuation">,</span>    torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">30000</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.01</span> <span class="token operator">-</span> <span class="token number">0.4</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果如下</p><img src="/2024/08/24/240824-toy-diffusion/hist-comp.png" class=""><p>可以看出，扩散模型基本可以学出目标数据分布。DDIM可能是由于模型太简单，加速不明显，一般可以10~20倍加速</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://space.bilibili.com/13355688?spm_id_from=333.976.0.0">Yuki大佬的扩散模型详解</a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> ToyDL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pytorch </tag>
            
            <tag> 扩散模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ToyDL之Pytorch中RNN的内部实现</title>
      <link href="/2024/07/06/240706-pytorchrnn-implement/"/>
      <url>/2024/07/06/240706-pytorchrnn-implement/</url>
      
        <content type="html"><![CDATA[<blockquote><p>背景：某分类任务用到了两层（单向）RNN，训练时基于Pytorch中nn.RNN()，C化部署时则需要自己手动实现</p><p><a href="https://github.com/Achhhe/ToyDL/tree/main/240706-rnn-implement">Github地址</a></p></blockquote><h3 id="RNN"><a href="#RNN" class="headerlink" title="RNN"></a>RNN</h3><p>Pytorch中<a href="https://pytorch.org/docs/stable/generated/torch.nn.RNN.html">RNN</a>迭代公式如下</p><img src="/2024/07/06/240706-pytorchrnn-implement/rnn.png" class=""><p>$x_t$为输入，$h_{t-1}$为隐变量</p><p>可以看出$h_t$其实就是$x_t$和$h_{t-1}$分别经过线性层，因此可以用两个nn.Linear()实现</p><p>以2层单向RNN为例，基于pytorch的rnn分类器以及自我实现如下</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">RnnClassifier</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> in_c<span class="token punctuation">,</span> hid_c<span class="token punctuation">,</span> n_layer <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>RnnClassifier<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>rnn <span class="token operator">=</span> nn<span class="token punctuation">.</span>RNN<span class="token punctuation">(</span>input_size <span class="token operator">=</span> in_c<span class="token punctuation">,</span> hidden_size <span class="token operator">=</span> hid_c<span class="token punctuation">,</span> num_layers <span class="token operator">=</span> n_layer<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>classifier <span class="token operator">=</span> nn<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span>            nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>hid_c<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Sigmoid<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">,</span> hn <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">''' x: (T,B,in_c)        hn: (2,B,hid_c)        '''</span>         x<span class="token punctuation">,</span> hn <span class="token operator">=</span> self<span class="token punctuation">.</span>rnn<span class="token punctuation">(</span>x<span class="token punctuation">,</span> hn<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>classifier<span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> x<span class="token punctuation">,</span> hn<span class="token punctuation">.</span>detach<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">MyRnnClassifier</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> in_c<span class="token punctuation">,</span> hid_c<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>MyRnnClassifier<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>hid_c <span class="token operator">=</span> hid_c        self<span class="token punctuation">.</span>Wih0 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>in_c<span class="token punctuation">,</span> hid_c<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>Whh0 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>hid_c<span class="token punctuation">,</span> hid_c<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>Wih1 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>hid_c<span class="token punctuation">,</span> hid_c<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>Whh1 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>hid_c<span class="token punctuation">,</span> hid_c<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>classifier <span class="token operator">=</span> nn<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span>            nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>hid_c<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Sigmoid<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>tanh <span class="token operator">=</span> nn<span class="token punctuation">.</span>Tanh<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">,</span> hn <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> x<span class="token punctuation">.</span>dim<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>            x <span class="token operator">=</span> x<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> hn <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>            hn <span class="token operator">=</span> torch<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> x<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>hid_c<span class="token punctuation">,</span> dtype <span class="token operator">=</span> x<span class="token punctuation">.</span>dtype<span class="token punctuation">,</span> device <span class="token operator">=</span> x<span class="token punctuation">.</span>device<span class="token punctuation">)</span>        <span class="token comment"># 2-layer rnn</span>        hn0 <span class="token operator">=</span> self<span class="token punctuation">.</span>tanh<span class="token punctuation">(</span>self<span class="token punctuation">.</span>Wih0<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>Whh0<span class="token punctuation">(</span>hn<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        hn1 <span class="token operator">=</span> self<span class="token punctuation">.</span>tanh<span class="token punctuation">(</span>self<span class="token punctuation">.</span>Wih1<span class="token punctuation">(</span>hn0<span class="token punctuation">)</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>Whh1<span class="token punctuation">(</span>hn<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>classifier<span class="token punctuation">(</span>hn1<span class="token punctuation">)</span>        hn <span class="token operator">=</span> torch<span class="token punctuation">.</span>stack<span class="token punctuation">(</span><span class="token punctuation">[</span>hn0<span class="token punctuation">,</span> hn1<span class="token punctuation">]</span><span class="token punctuation">,</span> dim <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>detach<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> x<span class="token punctuation">,</span> hn    <span class="token keyword">def</span> <span class="token function">copy_params_rnn</span><span class="token punctuation">(</span>_from<span class="token punctuation">,</span> _to<span class="token punctuation">)</span><span class="token punctuation">:</span>    _dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> _from<span class="token punctuation">.</span>state_dict<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token string">'classifier'</span> <span class="token keyword">not</span> <span class="token keyword">in</span> k<span class="token punctuation">:</span>            wei<span class="token punctuation">,</span> name<span class="token punctuation">,</span> num <span class="token operator">=</span> k<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'_'</span><span class="token punctuation">)</span>            k_new <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'W</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>num<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token punctuation">{</span>wei<span class="token punctuation">}</span></span><span class="token string">'</span></span>            _dict<span class="token punctuation">[</span>k_new<span class="token punctuation">]</span> <span class="token operator">=</span> v        <span class="token keyword">else</span><span class="token punctuation">:</span>            _dict<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> v    _to<span class="token punctuation">.</span>load_state_dict<span class="token punctuation">(</span>_dict<span class="token punctuation">)</span>    <span class="token keyword">return</span> _to<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>基于nn.RNN()进行模型训练，完成后将pth文件中的权重字典转成基于nn.Linear()的自我实现形式，可以验证输出严格对齐</p></blockquote><h3 id="LSTM"><a href="#LSTM" class="headerlink" title="LSTM"></a>LSTM</h3><p>与RNN类似，<a href="https://pytorch.org/docs/stable/generated/torch.nn.LSTM.html#torch.nn.LSTM">LSTM</a>也可以自我实现，公式如下</p><img src="/2024/07/06/240706-pytorchrnn-implement/lstm.png" class=""><p>LSTM比RNN多几个gate，因此单层LSTM的自我实现需要用到8个nn.Linear()</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">LstmClassifier</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> in_c<span class="token punctuation">,</span> hid_c<span class="token punctuation">,</span> n_layer <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>LstmClassifier<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>lstm <span class="token operator">=</span> nn<span class="token punctuation">.</span>LSTM<span class="token punctuation">(</span>input_size <span class="token operator">=</span> in_c<span class="token punctuation">,</span> hidden_size <span class="token operator">=</span> hid_c<span class="token punctuation">,</span> num_layers <span class="token operator">=</span> n_layer<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>classifier <span class="token operator">=</span> nn<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span>            nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>hid_c<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Sigmoid<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">,</span> hn <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">''' x: (T,B,in_c)        hn: (2,B,hid_c)        '''</span>         x<span class="token punctuation">,</span> hn <span class="token operator">=</span> self<span class="token punctuation">.</span>lstm<span class="token punctuation">(</span>x<span class="token punctuation">,</span> hn<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>classifier<span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> x<span class="token punctuation">,</span> hn<span class="token keyword">class</span> <span class="token class-name">MyLstmClassifier</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> in_c<span class="token punctuation">,</span> hid_c<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>MyLstmClassifier<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>hid_c <span class="token operator">=</span> hid_c        self<span class="token punctuation">.</span>Wii <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>in_c<span class="token punctuation">,</span> hid_c<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>Wif <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>in_c<span class="token punctuation">,</span> hid_c<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>Wig <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>in_c<span class="token punctuation">,</span> hid_c<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>Wio <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>in_c<span class="token punctuation">,</span> hid_c<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>Whi <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>hid_c<span class="token punctuation">,</span> hid_c<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>Whf <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>hid_c<span class="token punctuation">,</span> hid_c<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>Whg <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>hid_c<span class="token punctuation">,</span> hid_c<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>Who <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>hid_c<span class="token punctuation">,</span> hid_c<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>classifier <span class="token operator">=</span> nn<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span>            nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>hid_c<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Sigmoid<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>sigmoid <span class="token operator">=</span> nn<span class="token punctuation">.</span>Sigmoid<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>tanh <span class="token operator">=</span> nn<span class="token punctuation">.</span>Tanh<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">,</span> state <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> x<span class="token punctuation">.</span>dim<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>            x <span class="token operator">=</span> x<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> state <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>            ht <span class="token operator">=</span> torch<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>x<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>hid_c<span class="token punctuation">,</span> dtype <span class="token operator">=</span> x<span class="token punctuation">.</span>dtype<span class="token punctuation">,</span> device <span class="token operator">=</span> x<span class="token punctuation">.</span>device<span class="token punctuation">)</span>            ct <span class="token operator">=</span> torch<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>x<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>hid_c<span class="token punctuation">,</span> dtype <span class="token operator">=</span> x<span class="token punctuation">.</span>dtype<span class="token punctuation">,</span> device <span class="token operator">=</span> x<span class="token punctuation">.</span>device<span class="token punctuation">)</span>            state <span class="token operator">=</span> <span class="token punctuation">(</span>ht<span class="token punctuation">,</span> ct<span class="token punctuation">)</span>        ht<span class="token punctuation">,</span> ct <span class="token operator">=</span> state        <span class="token comment"># lstm</span>        it <span class="token operator">=</span> self<span class="token punctuation">.</span>sigmoid<span class="token punctuation">(</span>self<span class="token punctuation">.</span>Wii<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>Whi<span class="token punctuation">(</span>ht<span class="token punctuation">)</span><span class="token punctuation">)</span>        ft <span class="token operator">=</span> self<span class="token punctuation">.</span>sigmoid<span class="token punctuation">(</span>self<span class="token punctuation">.</span>Wif<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>Whf<span class="token punctuation">(</span>ht<span class="token punctuation">)</span><span class="token punctuation">)</span>        gt <span class="token operator">=</span> self<span class="token punctuation">.</span>tanh<span class="token punctuation">(</span>self<span class="token punctuation">.</span>Wig<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>Whg<span class="token punctuation">(</span>ht<span class="token punctuation">)</span><span class="token punctuation">)</span>        ot <span class="token operator">=</span> self<span class="token punctuation">.</span>sigmoid<span class="token punctuation">(</span>self<span class="token punctuation">.</span>Wio<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>Who<span class="token punctuation">(</span>ht<span class="token punctuation">)</span><span class="token punctuation">)</span>        ct <span class="token operator">=</span> ft <span class="token operator">*</span> ct <span class="token operator">+</span> it <span class="token operator">*</span> gt        ht <span class="token operator">=</span> ot <span class="token operator">*</span> self<span class="token punctuation">.</span>tanh<span class="token punctuation">(</span>ct<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>classifier<span class="token punctuation">(</span>ht<span class="token punctuation">)</span>        <span class="token keyword">return</span> x<span class="token punctuation">,</span> <span class="token punctuation">(</span>ht<span class="token punctuation">.</span>detach<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ct<span class="token punctuation">.</span>detach<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">copy_params_lstm</span><span class="token punctuation">(</span>_from<span class="token punctuation">,</span> _to<span class="token punctuation">)</span><span class="token punctuation">:</span>    _dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> _from<span class="token punctuation">.</span>state_dict<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token string">'_ih_'</span> <span class="token keyword">in</span> k <span class="token keyword">or</span> <span class="token string">'_hh_'</span> <span class="token keyword">in</span> k<span class="token punctuation">:</span>            hid_each <span class="token operator">=</span> v<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">//</span> <span class="token number">4</span>            wei<span class="token punctuation">,</span> name<span class="token punctuation">,</span> _ <span class="token operator">=</span> k<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'_'</span><span class="token punctuation">)</span>            <span class="token comment"># lstm的权重存在一起</span>            _dict<span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f'W</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">i.</span><span class="token interpolation"><span class="token punctuation">{</span>wei<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token punctuation">:</span>hid_each<span class="token punctuation">]</span>            _dict<span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f'W</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">f.</span><span class="token interpolation"><span class="token punctuation">{</span>wei<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> v<span class="token punctuation">[</span>hid_each <span class="token punctuation">:</span> hid_each<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">]</span>            _dict<span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f'W</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">g.</span><span class="token interpolation"><span class="token punctuation">{</span>wei<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> v<span class="token punctuation">[</span>hid_each <span class="token operator">*</span> <span class="token number">2</span> <span class="token punctuation">:</span> hid_each <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">]</span>            _dict<span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f'W</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">o.</span><span class="token interpolation"><span class="token punctuation">{</span>wei<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> v<span class="token punctuation">[</span>hid_each <span class="token operator">*</span> <span class="token number">3</span> <span class="token punctuation">:</span><span class="token punctuation">]</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            _dict<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> v    _to<span class="token punctuation">.</span>load_state_dict<span class="token punctuation">(</span>_dict<span class="token punctuation">)</span>    <span class="token keyword">return</span> _to<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    x <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>   <span class="token comment"># (T,B,in_c)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'------------ testing rnn ------------'</span><span class="token punctuation">)</span>    Rnn <span class="token operator">=</span> RnnClassifier<span class="token punctuation">(</span>in_c <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> hid_c <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">)</span>    MyRnn <span class="token operator">=</span> MyRnnClassifier<span class="token punctuation">(</span>in_c <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> hid_c <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">)</span>    MyRnn <span class="token operator">=</span> copy_params_rnn<span class="token punctuation">(</span>Rnn<span class="token punctuation">,</span> MyRnn<span class="token punctuation">)</span>    y1<span class="token punctuation">,</span> state1 <span class="token operator">=</span> Rnn<span class="token punctuation">(</span>x<span class="token punctuation">)</span>    y2<span class="token punctuation">,</span> state2 <span class="token operator">=</span> MyRnn<span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>y1 <span class="token operator">==</span> y2<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>state1<span class="token punctuation">,</span> state2<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'------------ testing lstm ------------'</span><span class="token punctuation">)</span>    Rnn <span class="token operator">=</span> LstmClassifier<span class="token punctuation">(</span>in_c <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> hid_c <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">)</span>    MyRnn <span class="token operator">=</span> MyLstmClassifier<span class="token punctuation">(</span>in_c <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> hid_c <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">)</span>    MyRnn <span class="token operator">=</span> copy_params_lstm<span class="token punctuation">(</span>Rnn<span class="token punctuation">,</span> MyRnn<span class="token punctuation">)</span>    y1<span class="token punctuation">,</span> state1 <span class="token operator">=</span> Rnn<span class="token punctuation">(</span>x<span class="token punctuation">)</span>    y2<span class="token punctuation">,</span> state2 <span class="token operator">=</span> MyRnn<span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>y1 <span class="token operator">==</span> y2<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>state1<span class="token punctuation">,</span> state2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看出结果严格对齐</p><img src="/2024/07/06/240706-pytorchrnn-implement/test.png" class=""><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://pytorch.org/docs/stable/generated/torch.nn.RNN.html">官方RNN文档</a></p><p><a href="https://pytorch.org/docs/stable/generated/torch.nn.LSTM.html#torch.nn.LSTM">官方LSTM文档</a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> ToyDL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pytorch </tag>
            
            <tag> RNN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+matery博客搭建之插入PDF</title>
      <link href="/2024/07/06/240706-insert-pdf-in-hexo/"/>
      <url>/2024/07/06/240706-insert-pdf-in-hexo/</url>
      
        <content type="html"><![CDATA[<h3 id="hexo-pdf插件安装"><a href="#hexo-pdf插件安装" class="headerlink" title="hexo-pdf插件安装"></a>hexo-pdf插件安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--save</span> hexo-pdf <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="文章插入"><a href="#文章插入" class="headerlink" title="文章插入"></a>文章插入</h3><p>最简单的就是</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% pdf url %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>优点：简单方便<br>缺点：无法调整大小</p><p>url可以是相对路径或者网络链接</p></blockquote><div class="row">    <embed src="理解SVM的三层境界.pdf" width="100%" height="550" type="application/pdf"></div><p>也可用下面命令</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>embed</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>理解SVM的三层境界.pdf<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>750<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://github.com/superalsrk/hexo-pdf/">hexo-pdf</a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+matery博客搭建之访问加速</title>
      <link href="/2024/07/06/240706-blog-accelerator/"/>
      <url>/2024/07/06/240706-blog-accelerator/</url>
      
        <content type="html"><![CDATA[<h3 id="代码压缩优化"><a href="#代码压缩优化" class="headerlink" title="代码压缩优化"></a>代码压缩优化</h3><h4 id="hexo-neat插件"><a href="#hexo-neat插件" class="headerlink" title="hexo-neat插件"></a>hexo-neat插件</h4><p>根目录安装插件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-neat <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将以下配置添加至站点配置文件<code>_config.yaml</code>末尾</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#hexo-neat 优化提速插件（去掉HTML、css、js的blank字符）</span>neat_enable: <span class="token boolean">true</span>neat_html:  enable: <span class="token boolean">true</span>  exclude:    - <span class="token string">'**/*.md'</span>   <span class="token comment">#避免markdown 语法的代码块消失</span>neat_css:  enable: <span class="token boolean">true</span>  exclude:    - <span class="token string">'**/*.min.css'</span>neat_js:  enable: <span class="token boolean">true</span>  mangle: <span class="token boolean">true</span>  output:  compress:  exclude:    - <span class="token string">'**/*.min.js'</span>    - <span class="token string">'**/**/instantpage.js'</span>    - <span class="token string">'**/matery.js'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.sky03.cn/posts/42790.html#toc-heading-15">Hexo进阶之各种优化</a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+matery博客搭建之Github部署</title>
      <link href="/2024/07/03/hexo-github-deploy/"/>
      <url>/2024/07/03/hexo-github-deploy/</url>
      
        <content type="html"><![CDATA[<h3 id="SSH密钥链接"><a href="#SSH密钥链接" class="headerlink" title="SSH密钥链接"></a>SSH密钥链接</h3><p>打开Git Bash，配置邮箱和姓名</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name Achhhe<span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token number">2238371421</span>@qq.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>生成密钥，将<code>id_rsa.pub</code>的内容复制粘贴到github账户的SSH Key中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">"2238371421@qq.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>测试是否免密链接成功，可以多试几次</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> <span class="token parameter variable">-T</span> git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Github部署"><a href="#Github部署" class="headerlink" title="Github部署"></a>Github部署</h3><p>github账户新建一个<code>index.html</code>页面</p><p>修改站点配置文件<code>_config.yml</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">url: https://Achhhe.github.io/deploy:  type: <span class="token function">git</span>  repo: https://github.com/Achhhe/Achhhe.github.io  <span class="token comment"># example, https://github.com/hexojs/hexojs.github.io</span>  branch: master <span class="token comment">#要与index.html相同分支s</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装部署插件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 1</span><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git <span class="token parameter variable">--save</span><span class="token comment"># 或</span><span class="token comment"># 2 如果网不好可以用cnpm，cnpm安装方式可上网搜索</span>cnpm <span class="token function">install</span> hexo-deployer-git <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>部署至github</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo cleanhexo ghexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/victoryxa/article/details/103733655">SSH密钥链接</a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客搭建 </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+matery博客搭建之主题美化</title>
      <link href="/2024/07/01/blog-beautify/"/>
      <url>/2024/07/01/blog-beautify/</url>
      
        <content type="html"><![CDATA[<div class="markmap-container" style="height:400px">  <svg data="{&quot;t&quot;:&quot;root&quot;,&quot;d&quot;:0,&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;下载node.js和git&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;hexo博客美化&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;美化：代码高亮，行号显示，搜索，字数统计，emoji，&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;todo：看板娘，暗黑模式，樱花特效，右键定制，时光列表，个人相册&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;配置修改：个人简介，运行时间，主题颜色，文章加密，个人相册等&quot;}]}],&quot;p&quot;:{}}"></svg></div><blockquote><p>脑图可拖动和放缩</p></blockquote><h3 id="定制化美化"><a href="#定制化美化" class="headerlink" title="定制化美化"></a>定制化美化</h3><h4 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h4><p>本人安装<code>hexo 7.2.0</code>，从 Hexo5.0 版本开始自带了 <code>prismjs</code> 代码语法高亮的支持</p><p>如果你的博客中曾经安装过 <code>hexo-prism-plugin</code> 的插件，那么你须要执行 <code>npm uninstall hexo-prism-plugin</code> 来卸载掉它，否则生成的代码中会有 <code>{</code> 和 <code>}</code> 的转义字符。</p><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并将 <code>prismjs.enable</code> 的值设置为 <code>true</code>，主要配置如下，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">syntax_highlighter</span><span class="token punctuation">:</span> prismjs<span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">auto_detect</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span>  <span class="token key atrule">wrap</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">hljs</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prismjs</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">preprocess</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：需要将<code>syntax_highlighter</code>值置为<code>prismjs</code></p><h4 id="行号显示"><a href="#行号显示" class="headerlink" title="行号显示"></a>行号显示</h4><p>默认版本不显示行号，在主题<code>source/css/matery.css</code>添加</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.line-numbers-rows</span> <span class="token punctuation">{</span>    <span class="token property">border-right-width</span><span class="token punctuation">:</span> 0px <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.line-numbers</span> <span class="token punctuation">{</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 1.5rem 1.5rem 1.5rem 3.5rem <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 1rem 0 <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #272822<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 0.35rem<span class="token punctuation">;</span>    <span class="token property">tab-size</span><span class="token punctuation">:</span> 4<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在主题下的<code>source/libs/prism/prism.css</code>添加</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">pre[class*="language-"].line-numbers</span> <span class="token punctuation">{</span> <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span> <span class="token property">padding-left</span><span class="token punctuation">:</span> 3.8em<span class="token punctuation">;</span> <span class="token property">counter-reset</span><span class="token punctuation">:</span> linenumber<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">pre[class*="language-"].line-numbers &gt; code</span> <span class="token punctuation">{</span> <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span> <span class="token property">white-space</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.line-numbers .line-numbers-rows</span> <span class="token punctuation">{</span> <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span> <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span> <span class="token property">left</span><span class="token punctuation">:</span> -3.8em<span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span> 3em<span class="token punctuation">;</span> <span class="token comment">/* works for line-numbers below 1000 lines */</span> <span class="token property">letter-spacing</span><span class="token punctuation">:</span> -1px<span class="token punctuation">;</span> <span class="token property">border-right</span><span class="token punctuation">:</span> 1px solid #999<span class="token punctuation">;</span> <span class="token property">-webkit-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token property">-moz-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token property">-ms-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token property">user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token selector">.line-numbers-rows &gt; span</span> <span class="token punctuation">{</span>  <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">counter-increment</span><span class="token punctuation">:</span> linenumber<span class="token punctuation">;</span> <span class="token punctuation">}</span>  <span class="token selector">.line-numbers-rows &gt; span:before</span> <span class="token punctuation">{</span>   <span class="token property">content</span><span class="token punctuation">:</span> <span class="token function">counter</span><span class="token punctuation">(</span>linenumber<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token property">color</span><span class="token punctuation">:</span> #999<span class="token punctuation">;</span>   <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>   <span class="token property">padding-right</span><span class="token punctuation">:</span> 0.8em<span class="token punctuation">;</span>   <span class="token property">text-align</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>可以添加行号，但是竖线还是没显示，以后找机会学习下其他大佬的操作</em></p><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="中文链接转拼音（建议安装）"><a href="#中文链接转拼音（建议安装）" class="headerlink" title="中文链接转拼音（建议安装）"></a>中文链接转拼音（建议安装）</h4><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment"># default: '-'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="文章字数统计插件（建议安装）"><a href="#文章字数统计插件（建议安装）" class="headerlink" title="文章字数统计插件（建议安装）"></a>文章字数统计插件（建议安装）</h4><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i <span class="token parameter variable">--save</span> hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">postInfo</span><span class="token punctuation">:</span>  <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 发布日期</span>  <span class="token key atrule">update</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 更新日期</span>  <span class="token key atrule">wordCount</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 文章字数统计</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 站点总文章字数</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 文章阅读时长</span>  <span class="token key atrule">readCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 文章阅读次数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="添加emoji表情支持（可选的）"><a href="#添加emoji表情支持（可选的）" class="headerlink" title="添加emoji表情支持（可选的）"></a>添加emoji表情支持（可选的）</h4><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code> <span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-none"><code class="language-none">githubEmojis:  enable: true  className: github-emoji  inject: true  styles:  customEmojis:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了</p><h4 id="看板娘"><a href="#看板娘" class="headerlink" title="看板娘"></a>看板娘</h4><p><a href="https://www.chensheng.group/2020/07/27/135-hexo%E7%9C%8B%E6%9D%BF%E5%A8%98/">参考</a></p><h4 id="暗黑模式"><a href="#暗黑模式" class="headerlink" title="暗黑模式"></a>暗黑模式</h4><p>参考<a href="https://blog.17lai.site/posts/4a2050e2/#%E6%B7%BB%E5%8A%A0%E5%A4%9C%E9%97%B4%E6%A8%A1%E5%BC%8F%E5%88%87%E6%8D%A2">夜法</a>大佬添加了深浅主题交换</p><p>修改<code>themes&gt;hexo-theme-matery&gt;source&gt;css&gt;matery.css</code>参数，调整位置</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.sum-moon-box</span> <span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 10%<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 135px<span class="token punctuation">;</span>     <span class="token comment">/*调整位置*/</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 900<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>暂时可用，个人喜欢放在菜单导航栏，但是目前能力有限<span class="github-emoji"><span>😭</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p></blockquote><p>原模板初始为浅色主题，但图标为太阳<code>fa-sun</code>，需要修改图标为月亮<code>fa-moon</code></p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sum-moon-box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-floating btn-large waves-effect waves-light<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">switchNightMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>深浅主题切换<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sum-moon-icon<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-moon<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span>48px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span>48px<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 28px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="收缩目录按钮"><a href="#收缩目录按钮" class="headerlink" title="收缩目录按钮"></a>收缩目录按钮</h4><p>目录收缩按钮，在<code>/themes/hexo-theme-matery/layout/_partial/post-detail-toc.ejs</code>中</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* toc按钮位置调整 */</span><span class="token selector">#floating-toc-btn</span> <span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 135px<span class="token punctuation">;</span>     <span class="token comment">/*原来为75*/</span>    <span class="token property">padding-top</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 998<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="返回顶部按钮"><a href="#返回顶部按钮" class="headerlink" title="返回顶部按钮"></a>返回顶部按钮</h4><p>位置调整在<code>themes&gt;hexo-theme-matery&gt;source&gt;css&gt;matery.css</code>中</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*回到顶部按钮样式*/</span><span class="token selector">.top-scroll</span> <span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 135px<span class="token punctuation">;</span>  <span class="token comment">/*原来为15*/</span>    <span class="token property">padding-top</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 998<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>增加”返回顶部”文字提示，在<code>themes\hexo-theme-matery\layout\_partial\back-top.ejs</code></p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>backTop<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top-scroll<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-floating btn-large waves-effect waves-light<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#!<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>返回顶部<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-arrow-up<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="导航栏添加深浅主题切换按钮"><a href="#导航栏添加深浅主题切换按钮" class="headerlink" title="导航栏添加深浅主题切换按钮"></a>导航栏添加深浅主题切换按钮</h4><p>将<code>themes/hexo-theme-matery/layout/_partial/day-night.ejs</code>中原主题切换按钮注释掉</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token comment">&lt;!-- &lt;div class="sum-moon-box"&gt;  &lt;a class="btn-floating btn-large waves-effect waves-light" onclick="switchNightMode()" title="深浅主题切换" &gt;    &lt;i id="sum-moon-icon" class="fas fa-moon" style="width:48px; height:48px; font-size: 28px;"&gt;&lt;/i&gt;  &lt;/a&gt;&lt;/div&gt; --&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在导航栏文件<code>themes/hexo-theme-matery/layout/_partial/navigation.ejs</code>中的搜索后面添加主题切换按钮，同时去掉原样式<code>btn-floating</code>和<code>btn-large</code>，调整大小</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#searchModal<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-trigger waves-effect waves-light<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>searchIcon<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-search<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'search'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%&gt;</span></span><span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">zoom</span><span class="token punctuation">:</span> 0.85<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-trigger waves-effect waves-light<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">switchNightMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>深浅主题切换<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sum-moon-icon<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-moon<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">zoom</span><span class="token punctuation">:</span> 0.7<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>2024.7.4：新发现个bug，深色主题+<span class="github-emoji"><span>☀</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2600.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>图标情况下，刷新页面可以实现深色主题保持，但是图标会切回初始的<span class="github-emoji"><span>🌙</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f319.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><p>技术有限，不会图标保持操作，偷个懒，选择把图标固定为<code>fa fa-adjust</code>，同时将id改个名字</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sum-moon-icon1<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-adjust<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">zoom</span><span class="token punctuation">:</span> 0.7<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><blockquote><p>20247.6：学习<a href="https://immortalqx.github.io/">LQX</a>博客发现，将黑夜模式判断放在<code>themes\hexo-theme-matery\source\js\matery.js</code>文件可以避免页面刷新时图标回到<span class="github-emoji"><span>🌙</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f319.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 黑夜模式判断</span><span class="token keyword">if</span> <span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'isDark'</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'1'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'DarkMode'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#sum-moon-icon'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fa-sun"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">'fa-moon'</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'DarkMode'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#sum-moon-icon'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeleClass</span><span class="token punctuation">(</span><span class="token string">"fa-sun"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">'fa-moon'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>原<code>themes\hexo-theme-matery\layout\layout.ejs</code>中模式判断可以注释掉</p></blockquote><h4 id="鼠标光标星星拖尾"><a href="#鼠标光标星星拖尾" class="headerlink" title="鼠标光标星星拖尾"></a>鼠标光标星星拖尾</h4><p>在<code>themes/hexo-theme-matery/source/js</code>文件夹下新建<code>cursor.js</code>文件，并将<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@3.2.5/source/js/cursor.js">传送门</a>内容粘贴进去</p><p>在<code>themes/hexo-theme-matery/layout/layout.ejs</code>内新增</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/js/cursor.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="樱花特效"><a href="#樱花特效" class="headerlink" title="樱花特效"></a>樱花特效</h4><p>Todo</p><h4 id="鼠标点击特效"><a href="#鼠标点击特效" class="headerlink" title="鼠标点击特效"></a>鼠标点击特效</h4><p>Todo</p><h4 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h4><p>修改的地方<code>themes/hexo-theme-matery/layout/_partial/footer.ejs</code>文件中，包括站点、使用的主题、访问量等</p><h4 id="修改网站背景"><a href="#修改网站背景" class="headerlink" title="修改网站背景"></a>修改网站背景</h4><p>修改主题配置文件对应参数，<code>themes/hexo-theme-matery/_config.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 网站背景图</span><span class="token key atrule">background</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">url</span><span class="token punctuation">:</span> /medias/background.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="时光列表"><a href="#时光列表" class="headerlink" title="时光列表"></a>时光列表</h4><p>Todo</p><h4 id="脑图"><a href="#脑图" class="headerlink" title="脑图"></a>脑图</h4><p>安装脑图插件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-markmap<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>绘图，可缩放，平移</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% markmap 400px %}<span class="token list punctuation">-</span> 下载node.js和git<span class="token list punctuation">-</span> hexo博客美化  <span class="token list punctuation">-</span> 美化：代码高亮，行号显示，搜索，字数统计，emoji，  <span class="token list punctuation">-</span> todo：看板娘，暗黑模式，樱花特效，右键定制，时光列表，个人相册  <span class="token list punctuation">-</span> 配置修改：个人简介，运行时间，主题颜色，文章加密，个人相册等{% endmarkmap %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>存在问题：latex公式显示异常，深色主题脑图文字不适配</p></blockquote><h3 id="模板配置修改"><a href="#模板配置修改" class="headerlink" title="模板配置修改"></a>模板配置修改</h3><p>修改根目录下<code>_config.yaml</code>配置</p><h4 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> HeBlog<span class="token key atrule">subtitle</span><span class="token punctuation">:</span> <span class="token string">'苟日新，日日新，又日新'</span><span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token string">'记录学习之旅，巩固自我及启发后人'</span><span class="token key atrule">keywords</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>hexo<span class="token punctuation">,</span> 算法，计算机视觉，人工智能<span class="token punctuation">]</span><span class="token key atrule">author</span><span class="token punctuation">:</span> Achhhe<span class="token key atrule">language</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN<span class="token key atrule">timezone</span><span class="token punctuation">:</span> <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="主题配置修改"><a href="#主题配置修改" class="headerlink" title="主题配置修改"></a>主题配置修改</h3><h4 id="关闭contact和friends"><a href="#关闭contact和friends" class="headerlink" title="关闭contact和friends"></a>关闭contact和friends</h4><p>初始模板带有<code>Contact</code>和<code>Friends</code>选项，但是没有对应页面。如果不想创建，可以直接修改<code>/themes/hexo-theme-matery/_config.yaml</code>对应配置进行关闭</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle  <span class="token comment">#Contact:</span>   <span class="token comment">#url: /contact</span>   <span class="token comment">#icon: fas fa-comments</span>  <span class="token comment">#Friends:</span>   <span class="token comment">#url: /friends</span>   <span class="token comment">#icon: fas fa-address-book</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="修改个人简介"><a href="#修改个人简介" class="headerlink" title="修改个人简介"></a>修改个人简介</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">profile</span><span class="token punctuation">:</span>  <span class="token key atrule">avatar</span><span class="token punctuation">:</span> /medias/avatar.jpg  <span class="token key atrule">career</span><span class="token punctuation">:</span> Algorithm Engineer  <span class="token key atrule">mySkills</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">data</span><span class="token punctuation">:</span>    <span class="token key atrule">Python</span><span class="token punctuation">:</span>      <span class="token key atrule">background</span><span class="token punctuation">:</span> <span class="token string">'linear-gradient(to right, #FF0066 0%, #FF00CC 100%)'</span>      <span class="token key atrule">percent</span><span class="token punctuation">:</span> 90%    <span class="token key atrule">Low Level Vision</span><span class="token punctuation">:</span>      <span class="token key atrule">background</span><span class="token punctuation">:</span> <span class="token string">'linear-gradient(to right, #9900FF 0%, #CC66FF 100%)'</span>      <span class="token key atrule">percent</span><span class="token punctuation">:</span> 90%    <span class="token key atrule">C/C++</span><span class="token punctuation">:</span>      <span class="token key atrule">background</span><span class="token punctuation">:</span> <span class="token string">'linear-gradient(to right, #2196F3 0%, #42A5F5 100%)'</span>      <span class="token key atrule">percent</span><span class="token punctuation">:</span> 60%    <span class="token key atrule">Self-Supervised Learning</span><span class="token punctuation">:</span>      <span class="token key atrule">background</span><span class="token punctuation">:</span> <span class="token string">'linear-gradient(to right, #00BCD4 0%, #80DEEA 100%)'</span>      <span class="token key atrule">percent</span><span class="token punctuation">:</span> 90%    <span class="token key atrule">Pytorch</span><span class="token punctuation">:</span>      <span class="token key atrule">background</span><span class="token punctuation">:</span> <span class="token string">'linear-gradient(to right, #4CAF50 0%, #81C784 100%)'</span>      <span class="token key atrule">percent</span><span class="token punctuation">:</span> 85%    <span class="token key atrule">Liveness Detection</span><span class="token punctuation">:</span>      <span class="token key atrule">background</span><span class="token punctuation">:</span> <span class="token string">'linear-gradient(to right, #FFEB3B 0%, #FFF176 100%)'</span>      <span class="token key atrule">percent</span><span class="token punctuation">:</span> 85%      <span class="token key atrule">githubLink</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/Achhhe  <span class="token key atrule">title</span><span class="token punctuation">:</span> Fork Me<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="站点初始运行时间"><a href="#站点初始运行时间" class="headerlink" title="站点初始运行时间"></a>站点初始运行时间</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 站点运行开始时间.</span><span class="token key atrule">time</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">year</span><span class="token punctuation">:</span> <span class="token number">2024</span> <span class="token comment"># 年份</span>  <span class="token key atrule">month</span><span class="token punctuation">:</span> <span class="token number">06</span> <span class="token comment"># 月份</span>  <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token number">29</span> <span class="token comment"># 日期</span>  <span class="token key atrule">hour</span><span class="token punctuation">:</span> <span class="token number">00</span> <span class="token comment"># 小时</span>  <span class="token key atrule">minute</span><span class="token punctuation">:</span> <span class="token number">00</span> <span class="token comment"># 分钟</span>  <span class="token key atrule">second</span><span class="token punctuation">:</span> <span class="token number">00</span> <span class="token comment"># 秒</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="其他打开或关闭"><a href="#其他打开或关闭" class="headerlink" title="其他打开或关闭"></a>其他打开或关闭</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">mathjax</span><span class="token punctuation">:</span>  <span class="token comment"># 数学公式，全局开关</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">music</span><span class="token punctuation">:</span>   <span class="token comment"># 音乐插件</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">2097531989</span>  <span class="token comment"># 对应歌单id</span>  <span class="token key atrule">reward</span><span class="token punctuation">:</span>  <span class="token comment"># 打赏功能</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">myProjects</span><span class="token punctuation">:</span>  <span class="token comment"># 个人工程</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">myGallery</span><span class="token punctuation">:</span>   <span class="token comment"># 个人相册</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">ribbon_dynamic</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">sharejs</span><span class="token punctuation">:</span>  <span class="token comment">#分享模块</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">sites</span><span class="token punctuation">:</span> qq<span class="token punctuation">,</span>qzone<span class="token punctuation">,</span>wechat<span class="token punctuation">,</span>weibo<span class="token punctuation">,</span>google<span class="token key atrule">verifyPassword</span><span class="token punctuation">:</span>  <span class="token comment"># 文章验证密码 SHA256加密</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其他配置可根据个人喜好进行修改，包括：</p><blockquote><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li><code>favicon</code> 和 <code>Logo</code></li><li><strong>个人信息</strong></li><li><strong>文章加密</strong></li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li><strong>MathJax</strong></li><li><strong>文章字数统计、阅读时长</strong></li><li>点击页面的’爱心’效果</li><li>我的项目</li><li><strong>我的技能</strong></li><li><strong>我的相册</strong></li><li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li><li><a href="http://busuanzi.ibruce.info/">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li></ul></blockquote><p>如果不满意本主题中的诸多功能和主题色彩，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成</p><p>以下列出修改颜色和图片</p><h4 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h4><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span><span class="token selector">.bg-color</span> <span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>45deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>200<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">)</span> 40%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>200<span class="token punctuation">,</span>0.5<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rainbow</span> <span class="token punctuation">{</span>   <span class="token comment">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@keyframes</span> rainbow</span> <span class="token punctuation">{</span>    <span class="token comment">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>CSS函数<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/gradient/linear-gradient">linear-gradient</a>创建一个由两种或多种颜色沿一条直线进行线性过渡的图像</p><p>本博客设置$45^{\circ}$渐变，起始为红色系，在$40$%处变为蓝色系</p><h4 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h4><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 `` 代码中：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs">$('.bg-cover').css('background-image', 'url(/medias/banner/' + new Date().getDay() + '.jpg)');<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><blockquote><p>banner图太大可能显示红色背景，<a href="https://github.com/blinkfox/hexo-theme-matery/issues/528">传送门</a></p><p>图片源自<a href="https://immortalqx.github.io/">LQX</a>博客，感谢<span class="github-emoji"><span>😃</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p></blockquote><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/dm900work/article/details/121332092">行号显示</a></p><p><a href="https://blog.dreamruins.com/tutorials/1121281946">暗黑主题-Ruins</a></p><p><a href="https://blog.17lai.site/posts/4a2050e2/">夜法之书</a></p><p><a href="https://immortalqx.github.io/">LQX</a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+matery博客搭建之插入图片</title>
      <link href="/2024/06/30/insert-image-in-hexo/"/>
      <url>/2024/06/30/insert-image-in-hexo/</url>
      
        <content type="html"><![CDATA[<div class="markmap-container" style="height:400px">  <svg data="{&quot;t&quot;:&quot;root&quot;,&quot;d&quot;:0,&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;全局资源文件夹&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;新建<code>images</code>文件夹&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;<code>![](/images/my-first-post-2.png)</code>访问&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;最简单，方便快捷，但文章较多时资源混乱&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;文章资源文件夹&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;<code>post_asset_folder</code>值为<code>true</code>&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;通过<code>asset_img</code>相对路径访问&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;各文章资源独立，规范化管理&quot;}]}],&quot;p&quot;:{}}"></svg></div><blockquote><p>脑图可拖动和放缩</p></blockquote><h3 id="全局资源文件夹"><a href="#全局资源文件夹" class="headerlink" title="全局资源文件夹"></a>全局资源文件夹</h3><p>在<code>source</code>文件夹下新建一个<code>images</code>文件夹，把所有文章的图片资源都放里面，markdown文档内直接<code>![](/images/my-first-post-2.png)</code>访问。注意，<code>/</code>指的是根目录，对于hexo，<code>source</code>就是资源文件的根目录</p><p><img src="/images/my-first-post-2.png"></p><p>优点：方便快捷，统一管理，方便文件多次调</p><p>缺点：文章较多时资源混乱</p><h3 id="文章资源文件夹"><a href="#文章资源文件夹" class="headerlink" title="文章资源文件夹"></a>文章资源文件夹</h3><p>对于每篇文章单独建立一个资源文件夹，各自独立管理</p><p>修改<code>_config.yaml</code>中的<code>post_asset_folder</code>值为<code>true</code></p><p><code>hexo new 'title'</code>创建新post以后，会在<code>_post</code>文件夹下创建同名的文件夹和markdown文件，将图片资源(本文为<code>my-first-post-2-1.png</code>)放置文件夹内，可通过<code>asset_img</code>直接相对路径访问，markdown调节路径会比较繁琐</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token punctuation">{</span>% asset_img my-first-post-2-1.png 文章资源文件夹图片展示 %<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/2024/06/30/insert-image-in-hexo/my-first-post-2-1.png" class="" title="文章资源文件夹图片展示"><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://hexo.io/zh-cn/docs/asset-folders">hexo中文文档</a></p><p><a href="https://blog.csdn.net/2301_77285173/article/details/130189857">在hexo博客中插入图片的方法</a></p><p><a href="https://blog.17lai.site/posts/cf0f47fd/#%E8%84%91%E5%9B%BE">夜法之书</a></p><p><a href="https://github.com/MaxChang3/hexo-markmap/blob/main/README_HANS.md">脑图</a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+matery博客搭建之框架搭建</title>
      <link href="/2024/06/29/my-first-post/"/>
      <url>/2024/06/29/my-first-post/</url>
      
        <content type="html"><![CDATA[<div class="markmap-container" style="height:400px">  <svg data="{&quot;t&quot;:&quot;root&quot;,&quot;d&quot;:0,&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;下载node.js和git&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;hexo搭建博客&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;下载node.js和git&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;搭建博客&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;更换主题，新建post，新建page&quot;}]}]}],&quot;p&quot;:{}}"></svg></div><blockquote><p>脑图可拖动和放缩</p></blockquote><h2 id="下载node-js和git"><a href="#下载node-js和git" class="headerlink" title="下载node.js和git"></a>下载node.js和git</h2><p>node.js直接<a href="https://nodejs.org/zh-cn">官网</a>下载</p><p>git从<a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/">阿里镜像</a>下载，直接下载最新的<a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.45.2.windows.1/">v2.45.2.windows.1/</a></p><p>直接默认安装配置即可，环境变量会默认添加</p><h2 id="基于hexo框架搭建博客"><a href="#基于hexo框架搭建博客" class="headerlink" title="基于hexo框架搭建博客"></a>基于hexo框架搭建博客</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-cli <span class="token parameter variable">-g</span>  <span class="token comment"># 安装hexo框架</span><span class="token builtin class-name">cd</span> xxx                   <span class="token comment"># 切换至自定义博客保存目录</span>hexo init blog           <span class="token comment"># 生成并初始化博客至blog目录</span><span class="token builtin class-name">cd</span> bloghexo s                   <span class="token comment"># hexo server，启动本地博客服务</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>本地浏览器<code>http://localhost:4000/</code>可以看到如下</p><p><img src="/images/my-first-post-1.png"></p><h3 id="必备操作"><a href="#必备操作" class="headerlink" title="必备操作"></a>必备操作</h3><h4 id="Create-Your-First-Post"><a href="#Create-Your-First-Post" class="headerlink" title="Create Your First Post"></a>Create Your First Post</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new <span class="token string">'my first post'</span>     <span class="token comment"># 创建新post</span>hexo s                       <span class="token comment"># 启动server</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>上述指令将创建文件至<code>\blog\source\_posts\my-first-post.md</code>，可基于<code>markdown</code>编写内容</p><p><strong>Front-matter</strong>简单示例</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">title: My First Postdate: 2024-06-29 13:47:03mathjax: true   #打开数据公式局部开关categories: 博客搭建tags:  <span class="token list punctuation">-</span> Hexo  <span class="token list punctuation">-</span> 博客搭建 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>Front-matter</strong>最全示例</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> xxx<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token key atrule">author</span><span class="token punctuation">:</span> Achhhe<span class="token key atrule">img</span><span class="token punctuation">:</span> /source/images/xxx.jpg<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">hide</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /images/1.jpg<span class="token key atrule">password</span><span class="token punctuation">:</span> 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92<span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> xxx<span class="token key atrule">categories</span><span class="token punctuation">:</span> xxx<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> xxx  <span class="token punctuation">-</span> yyy</span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h4><p>去<a href="https://blinkfox.github.io/">闪烁之狐</a>主页下载稳定版主题文件<code>hexo-theme-matery-master.zip</code>，解压至<code>blog/theme</code></p><p>修改hexo根目录下<code>_config.yaml</code>配置文件中<code>theme</code>值为<code>theme: hexo-theme-matery</code></p><p>注意：主题压缩文件直接解压的文件夹名称为<code>hexo-theme-matery-master</code>，需要修改成<code>hexo-theme-matery</code>（即<code>blog/theme</code>文件夹下主题文件夹名称应和<code>_config.yaml</code>的<code>theme</code>值相同）</p><p>最终效果如下</p><p><img src="/images/my-first-post-2.png"></p><p>具体修改见下文</p><h4 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h4><p><code>categories</code> 页是用来展示所有分类的页面。初始模板 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> categories<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h4><p><code>tags</code> 页是用来展示所有标签的页面。初始博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> tags<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 18:23:38</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h4><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面。初始博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"about"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> about<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">matery模板安装教程</a></p><p><a href="https://hexo.io/zh-cn/docs/">hexo中文文档</a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
